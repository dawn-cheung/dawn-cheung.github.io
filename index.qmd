---
title: "dawn-cheung"
---

*Work in progress for final project*

```{r, eval=TRUE,echo=FALSE, warning=FALSE, message=FALSE}
#remove all vent commenst when setting echo to true

library(tidyverse)
library(ggplot2)
library(maps)
library(sf)
library(dplyr)
library(countrycode)

# Import the data with coordinates
world_map <- map_data("world")
world_map$region <- countrycode(world_map$region, "country.name", "iso3c")
accesstonet <- read.csv("accesstointernet.csv")
netspeed <- read.csv("worldwideInternetSpeed.csv") #ISO2 code used in dataset!
netprice <- read.csv("worldwideMobileDataPricing2019to2023.csv") #ISO2 code used in dataset!

#data cleaning for access to net
imstupid <- accesstonet %>%
   pivot_longer(
    cols = X1990:X2022,
    names_to = "Xyear",
    values_to = "percentaccess") %>%
  rename(region = Country.Code)

#data cleaning for speed of net
imhungry <- netspeed %>%
   pivot_longer(
    cols = D2017:D2023,
    names_to = "Dyear",
    values_to = "meandownloadspeed") %>%
  rename(region = Country.Code)

#data cleaning for price of net
imtired <- netprice %>% #im ok i swear its just 2.30am now 3.17
   pivot_longer(
    cols = D2019:D2023,
    names_to = "Dyear",
    values_to = "meanprice") %>%
  rename(region = Country.Code)

imtired$meanprice <- gsub('[$,]', '', imtired$meanprice) #apparently the [] is required for non-alphabets?? gonna put this in the what i learned on my own thing.

#filter by year
accessyear <- imstupid %>% filter(Xyear == "X2020")

#join % pop access with world map
sostupid_map <- left_join(world_map, accessyear, by = "region")

#filter by year
speedyear <- imhungry %>% filter(Dyear == "D2020")
#filter by year AND download speed: speedyear <- imhungry %>% filter(Dyear == "D2020", meandownloadspeed<70)
#RESET ISO CODES (applies to priceyear as well)
world_map$region <- countrycode(world_map$region, "iso3c", "iso2c")
#join internet download speed (Mbps) with world map
sohungry_map <- left_join(world_map, speedyear, by = "region")

#filter by year
priceyear <- imtired %>% filter(Dyear == "D2020")
#join internet price with world map
sotired_map <- left_join(world_map, priceyear, by = "region")

sohungry_map$meandownloadspeed <- as.numeric(sohungry_map$meandownloadspeed)
sotired_map$meanprice <- as.numeric(sotired_map$meanprice)

#group = group connects the points in the correct order
ggplot(sostupid_map, aes(long, lat, group = group))+
  geom_polygon(aes(fill = percentaccess), color = "white", size = 0.03)+
  scale_fill_viridis_c(option = "B")

ggplot(sohungry_map, aes(long, lat, group = group))+
  geom_polygon(aes(fill = meandownloadspeed), color = "white", size = 0.03)+
  scale_fill_viridis_c(option = "C")

ggplot(sotired_map, aes(long, lat, group = group))+
  geom_polygon(aes(fill = meanprice), color = "white", size = 0.03)+
  scale_fill_viridis_c(option = "C")

econineq <- read.csv("EconomicInequality.csv")
gdpPERCAPITA <- read.csv("gdpPERCAPITA.csv") %>% rename(year = Year) #ISO3 used!
desi <- read.csv("desi-data.csv") #need to clean this data
GINIvaluesyearc3 <- econineq %>%
  filter(year == 2020) %>%
  #select(gini, c3) %>%
  rename(region = c3)

GINIvaluesyearc2 <- econineq %>%
  filter(year == 2020) %>%
  #select(gini, c3) %>%
  rename(region = c2)

gdpPERCAPITA <- gdpPERCAPITA %>%
  filter(year == 2020) %>%
  #select(gini, c3) %>%
  rename(region = Code)

accessscatter <- left_join(GINIvaluesyearc3, accessyear, by = "region") %>%
  left_join(. , gdpPERCAPITA, by = "region") #In tidyverse, the . refers to the entire object from the lhs of %>% So, it is the data.frame created from the left join of x and y 
head(accessscatter)
accessscatter %>% 
        drop_na(percentaccess) %>%
  ggplot(data = accessscatter, mapping = aes(x = gdp, y = percentaccess, colour = gini)) +
  geom_point()

gdpPERCAPITA$region <- countrycode(gdpPERCAPITA$region, "iso3c", "iso2c") #converting ISO3 to ISO2
speedscatter <- left_join(GINIvaluesyearc2, speedyear, by = "region") %>%
  left_join(. , gdpPERCAPITA, by = "region")
head(speedscatter)
speedscatter %>% 
        drop_na(meandownloadspeed) %>%
  ggplot(data = speedscatter, mapping = aes(x = GDP.per.capita, y = as.numeric(meandownloadspeed), colour = gini)) +
  geom_point()

speedscatter %>% 
        drop_na(meandownloadspeed) %>%
  ggplot(data = speedscatter, mapping = aes(x = gdp, y = as.numeric(meandownloadspeed), colour = region_wb)) +
  geom_point()

pricescatter <- left_join(GINIvaluesyearc2, priceyear, by = "region") %>%
  left_join(. , gdpPERCAPITA, by = "region")
pricescatter %>% 
        drop_na(meanprice) %>%
  ggplot(data = pricescatter, mapping = aes(x = as.numeric(meanprice), y = GDP.per.capita, colour = gini)) +
  geom_point()

pricescatter %>% 
        drop_na(meanprice) %>%
  ggplot(data = pricescatter, mapping = aes(x = as.numeric(meanprice), y = gdp, colour = region_wb)) +
  geom_point()

accessyear$region <- countrycode(accessyear$region, "iso3c", "iso2c")
priceaccessscatter <- left_join(accessyear, priceyear, by = "region")
head(priceaccessscatter)
priceaccessscatter %>% 
        drop_na(meanprice, percentaccess) %>%
  ggplot(data = priceaccessscatter, mapping = aes(x = as.numeric(meanprice), y = percentaccess, colour = Continental.region)) +
  geom_point()
```

\(1\) Hi! I'm Dawn, a year one communications and new media student. I like to bake but no one eats what I make.\
\
(2) github folder: <https://github.com/dawn-cheung/NM2207-Folder-Upload>
