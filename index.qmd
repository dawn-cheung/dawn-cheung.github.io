---
title: "dawn-cheung"
output: html_document
---

*Welcome to the data story of the world's digital inequality, and why it kinda sucks!*

This very webpage is a testament to how far digital technologies have come. All of the data presented collated here, and the tools used for collation (Rstudio, Quarto, various library packages, etc) were accessed and/or downloaded from the internet with a clunky old laptop. Hence, you would think that once this data story is published online, virtually anyone could access it! However, this is clearly not the case.

Below is a widget that shows, across space, 3 key factors that affects one's ability to use the internet: physical access to the internet (i.e. the availability of the relevant infocomm technologies, like cell towers and electronic devices), the price of internet

<iframe height="435" width="110%" frameborder="no" src="https://myshinyappplease.shinyapps.io/MyShinyApp/">

</iframe>

```{r unbroken, eval=TRUE, echo=FALSE, warning=FALSE, message=FALSE, fig.height = 6, fig.width = 14}
library(tidyverse)
library(ggplot2)
library(maps)
library(sf)
library(dplyr)
library(countrycode)
library(shiny)
library(ggpubr)
library(rsconnect)
library(plotly)

#Shiny app:
#https://myshinyappplease.shinyapps.io/MyShinyApp/

#HARDCODE ALL DATASETS INTO ISO3: DONE

# Import the data with coordinates
world_map <- map_data("world")
world_map$region <- countrycode(world_map$region, "country.name", "iso3c")

access_dataset <- read.csv("accesstointernet.csv")
speed_dataset <- read.csv("worldwideInternetSpeed.csv")
price_dataset <- read.csv("worldwideMobileDataPricing2019to2023.csv")

#filter by year
accessyear <- access_dataset %>% filter(Dyear == "D2020")
speedyear <- speed_dataset %>% filter(Dyear == "D2020")
priceyear <- price_dataset %>% filter(Dyear == "D2020")

econineq <- read.csv("EconomicInequality.csv") #ISO3 used
desidata <- read.csv("desi-data.csv") #ISO3 used!
gdpPERCAPITA <- read.csv("gdpPERCAPITA.csv")

econindicator <- econineq %>% 
  filter(year == 2020) #%>% #MY PROPOSED SOLUTION: use gini ONLY FOR COLOURATION. do NOT use gini values for xy values
  #filter(scale == "Equivalized")
desi <- desidata %>% filter(year == "2020")
gdpPERCAPITA <- gdpPERCAPITA %>% filter(year == 2020)

econindicator$gini <- as.numeric(econindicator$gini)
gdpPERCAPITA$GDP.per.capita <- as.numeric(gdpPERCAPITA$GDP.per.capita)
speedyear$values <- as.numeric(speedyear$values)
priceyear$values <- as.numeric(priceyear$values)

accessscatter <- left_join(econindicator, accessyear, by = "region")  %>%
  left_join(. , gdpPERCAPITA, by = "region")
accessscatter %>%  #KEEPING
        drop_na(values) %>%
  ggplot(data = accessscatter, mapping = aes(x = values, y = log(GDP.per.capita), colour = gini)) +
  geom_point() + 
  labs(x = "Percentage of the population accessing the Internet", y = "logarithm of GDP per capita", title = "How access to the internet affects economic output") +
  geom_smooth(method="lm", col="black")  +
  theme(plot.title=element_text(size=30))

accessyear <- accessyear %>% rename(accessyear_values = values)
priceyear <- priceyear %>% rename(priceyear_values = values) #i keep so much just to laugh at the EU
speedyear <- speedyear %>% rename(speedyear_values = values)

priceaccessscatter <- left_join(accessyear, priceyear, by = "region") %>%
  left_join(. , econindicator, by = "region")

priceaccessscatter %>% 
        drop_na(priceyear, accessyear) %>%
  ggplot(data = priceaccessscatter, mapping = aes(x = as.numeric(priceyear_values), y = accessyear_values, colour = Continental.region)) +
  geom_point() + 
  labs(x = "Price of Internet", y = "Percentage of the population accessing the Internet", title = "How price of internet affects access to the internet") +
  geom_smooth(method="lm", col="black")  +
  theme(plot.title=element_text(size=30))

accessyear <- accessyear %>% rename(values = accessyear_values)
priceyear <- priceyear %>% rename(values = priceyear_values)
speedyear <- speedyear %>% rename(values = speedyear_values)
```

```{r GDPoverSPEED, eval=TRUE, echo=FALSE, warning=FALSE, message=FALSE, fig.height = 6, fig.width = 14}
speedscatter <- left_join(econindicator, speedyear, by = "region")  %>%
  left_join(. , gdpPERCAPITA, by = c("region", "year"))
speedscatter %>% #KEEPING
  drop_na(values) %>%
  ggplot(data = speedscatter, mapping = aes(x = values, y = GDP.per.capita, colour = gini)) +
  geom_point() + 
  labs(x = "Speed of Internet", y = "GDP per capita", title = "How economic development affects mean speed of internet") +
  geom_smooth(method="lm", col="black")  +
  theme(plot.title=element_text(size=30)) +
  geom_vline(xintercept=2.5, linetype="dashed", color = "red") +
  geom_vline(xintercept=15, linetype="dashed", color = "red") +
  annotate(geom="text", x=3, y=98000, label=str_wrap("Official bandwith requirements needed for zoom to function", 15), color="black", fontsize=6, hjust = "left", lineheight = 0.8) +
  annotate(geom="text", x=15.6, y=82900, label=str_wrap("Zoom functions, but experiences buffer & poor video and audio quality", 20), color="black", fontsize=6, hjust = "left", lineheight = 0.8)
```

```{r 3i-survey-pie-charts, eval=TRUE, echo=FALSE, warning=FALSE, message=FALSE, fig.height = 6, fig.width = 14}
AgreeDisagreePie <- function(percent, my_title) {
  percent = as.numeric(percent)
  data <- data.frame("category" = c('Agree', 'Disagree'), "amount" = c(percent, 100-percent))
  ggplot(data, aes(x="", y=amount, fill=category)) +
    geom_bar(stat="identity", width=1) +
    coord_polar("y") +
    labs(title = str_wrap(my_title, 48)) +
    geom_text(aes(label = paste0(amount, "%")), position = position_stack(vjust = 0.5)) +
    theme_void() +
    theme(plot.title = element_text(size=15),
          axis.title = element_text(size=10),
          plot.margin = margin(0, 1.3, 0, 1.3, "cm"))
}

ggarrange(AgreeDisagreePie(73, "Being able to use the internet to access information and express opinions should be a human right"),
          AgreeDisagreePie(66, "The internet has improved life in my country"),
          AgreeDisagreePie(67, "Using the internet has helped me pursue my education or that of my household members"),
          ncol = 3, nrow = 1, labels = c("A", "B", "C"), common.legend = TRUE, legend = "bottom") 
```

```{r desi-tester, eval=FALSE, echo=FALSE, warning=FALSE, message=FALSE, fig.height = 6, fig.width = 14}
desi <- desi %>% filter(indicator == "desi_1a2")
head(desi)
desiscatter <- left_join(desi, accessyear, by = "region")
head(desiscatter)
desiscatter %>%  #KEEPING
        drop_na(values) %>%
  ggplot(data = desiscatter, mapping = aes(x = values, y = desi_values)) +
  geom_point() + 
  labs(x = "Percentage of the population accessing the Internet", y = "basic literacy skills", title = "what even lol") +
  geom_smooth(method="lm", col="black")  +
  theme(plot.title=element_text(size=30))
```

\(1\) Hi! I'm Dawn, a year one communications and new media student. I like to bake but no one eats what I make.\
\
(2) github folder: <https://github.com/dawn-cheung/NM2207-Folder-Upload>
