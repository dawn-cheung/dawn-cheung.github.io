[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "dawn-cheung",
    "section": "",
    "text": "Work in progress for final project\n\n\n[1] \"YES OK ITS ISO3C\"\n[1] \"isTRUE(wee$values == accessyear$values\"\n       long      lat group order region subregion Country.Name Dyear values\n1 -69.89912 12.45200     1     1     AW      &lt;NA&gt;         &lt;NA&gt;  &lt;NA&gt;     NA\n2 -69.89571 12.42300     1     2     AW      &lt;NA&gt;         &lt;NA&gt;  &lt;NA&gt;     NA\n3 -69.94219 12.43853     1     3     AW      &lt;NA&gt;         &lt;NA&gt;  &lt;NA&gt;     NA\n4 -70.00415 12.50049     1     4     AW      &lt;NA&gt;         &lt;NA&gt;  &lt;NA&gt;     NA\n5 -70.06612 12.54697     1     5     AW      &lt;NA&gt;         &lt;NA&gt;  &lt;NA&gt;     NA\n6 -70.05088 12.59707     1     6     AW      &lt;NA&gt;         &lt;NA&gt;  &lt;NA&gt;     NA\n\n\n\n\n\n       long      lat group order region subregion Country Dyear values\n1 -69.89912 12.45200     1     1     AW      &lt;NA&gt;   Aruba D2019  15.15\n2 -69.89571 12.42300     1     2     AW      &lt;NA&gt;   Aruba D2019  15.15\n3 -69.94219 12.43853     1     3     AW      &lt;NA&gt;   Aruba D2019  15.15\n4 -70.00415 12.50049     1     4     AW      &lt;NA&gt;   Aruba D2019  15.15\n5 -70.06612 12.54697     1     5     AW      &lt;NA&gt;   Aruba D2019  15.15\n6 -70.05088 12.59707     1     6     AW      &lt;NA&gt;   Aruba D2019  15.15\n\n\n\n\n\n       long      lat group order region subregion  Name Continental.region\n1 -69.89912 12.45200     1     1     AW      &lt;NA&gt; Aruba          CARIBBEAN\n2 -69.89571 12.42300     1     2     AW      &lt;NA&gt; Aruba          CARIBBEAN\n3 -69.94219 12.43853     1     3     AW      &lt;NA&gt; Aruba          CARIBBEAN\n4 -70.00415 12.50049     1     4     AW      &lt;NA&gt; Aruba          CARIBBEAN\n5 -70.06612 12.54697     1     5     AW      &lt;NA&gt; Aruba          CARIBBEAN\n6 -70.05088 12.59707     1     6     AW      &lt;NA&gt; Aruba          CARIBBEAN\n  Price.per.GB...change..5.years. Dyear values\n1                         -66.62% D2019   5.56\n2                         -66.62% D2019   5.56\n3                         -66.62% D2019   5.56\n4                         -66.62% D2019   5.56\n5                         -66.62% D2019   5.56\n6                         -66.62% D2019   5.56\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# A tibble: 266 × 4\n   Country.Name                region Dyear accessyear_values\n   &lt;chr&gt;                       &lt;chr&gt;  &lt;chr&gt;             &lt;dbl&gt;\n 1 Aruba                       AW     D2020              NA  \n 2 Africa Eastern and Southern &lt;NA&gt;   D2020              25.0\n 3 Afghanistan                 AF     D2020              18.4\n 4 Africa Western and Central  &lt;NA&gt;   D2020              41.7\n 5 Angola                      AO     D2020              32.6\n 6 Albania                     AL     D2020              72.2\n 7 Andorra                     AD     D2020              93.2\n 8 Arab World                  &lt;NA&gt;   D2020              66.4\n 9 United Arab Emirates        AE     D2020             100  \n10 Argentina                   AR     D2020              85.5\n# ℹ 256 more rows\n\n\n# A tibble: 247 × 6\n   region Name  Continental.region Price.per.GB...chang…¹ Dyear priceyear_values\n   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;              &lt;chr&gt;                  &lt;chr&gt; &lt;chr&gt;           \n 1 IL     Isra… NEAR EAST          -97.57%                D2020 0.11            \n 2 IT     Italy WESTERN EUROPE     -95.04%                D2020 0.43            \n 3 FJ     Fiji  OCEANIA            -97.54%                D2020 0.59            \n 4 SM     San … WESTERN EUROPE     -98.60%                D2020 1.16            \n 5 KH     Camb… ASIA (EX. NEAR EA… -98.82%                D2020 1.50            \n 6 PK     Paki… ASIA (EX. NEAR EA… -93.31%                D2020 0.69            \n 7 IN     India ASIA (EX. NEAR EA… -38.18%                D2020 0.09            \n 8 KG     Kyrg… CIS (FORMER USSR)  -35.17%                D2020 0.21            \n 9 FR     Fran… WESTERN EUROPE     -83.71%                D2020 0.81            \n10 CO     Colo… SOUTH AMERICA      -93.84%                D2020 3.46            \n# ℹ 237 more rows\n# ℹ abbreviated name: ¹​Price.per.GB...change..5.years.\n\n\n# A tibble: 6 × 9\n  Country.Name                region Dyear.x values.x Name    Continental.region\n  &lt;chr&gt;                       &lt;chr&gt;  &lt;chr&gt;      &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;             \n1 Aruba                       AW     D2020       NA   Aruba   CARIBBEAN         \n2 Africa Eastern and Southern &lt;NA&gt;   D2020       25.0 Namibia SUB-SAHARAN AFRICA\n3 Afghanistan                 AF     D2020       18.4 Afghan… ASIA (EX. NEAR EA…\n4 Africa Western and Central  &lt;NA&gt;   D2020       41.7 Namibia SUB-SAHARAN AFRICA\n5 Angola                      AO     D2020       32.6 Angola  SUB-SAHARAN AFRICA\n6 Albania                     AL     D2020       72.2 Albania EASTERN EUROPE    \n# ℹ 3 more variables: Price.per.GB...change..5.years. &lt;chr&gt;, Dyear.y &lt;chr&gt;,\n#   values.y &lt;chr&gt;\n\n\n\n\n\n\n\n\n\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(maps)\nlibrary(sf)\nlibrary(dplyr)\nlibrary(countrycode)\nlibrary(shiny)\nlibrary(ggpubr)\n\n# Import the data with coordinates\nworld_map &lt;- map_data(\"world\")\nworld_map$region &lt;- countrycode(world_map$region, \"country.name\", \"iso3c\")\naccesstonet &lt;- read.csv(\"accesstointernet.csv\")\nnetspeed &lt;- read.csv(\"worldwideInternetSpeed.csv\") #ISO2 code used in dataset!\nnetprice &lt;- read.csv(\"worldwideMobileDataPricing2019to2023.csv\") #ISO2 code used in dataset!\n\n#data cleaning for access to net\naccess_dataset &lt;- accesstonet %&gt;%\n  pivot_longer(\n    cols = X1990:X2022,\n    names_to = \"Xyear\",\n    values_to = \"values\") %&gt;%\n  rename(region = Country.Code)\n\n#data cleaning for speed of net\nspeed_dataset &lt;- netspeed %&gt;%\n  pivot_longer(\n    cols = D2017:D2023,\n    names_to = \"Dyear\",\n    values_to = \"values\") %&gt;%\n  rename(region = Country.Code)\n\n#data cleaning for price of net\nprice_dataset &lt;- netprice %&gt;% #im ok i swear its just 2.30am now 3.17\n  pivot_longer(\n    cols = D2019:D2023,\n    names_to = \"Dyear\",\n    values_to = \"values\") %&gt;%\n  rename(region = Country.Code)\n\nprice_dataset$values &lt;- gsub('[$,]', '', price_dataset$values) #apparently the [] is required for non-alphabets?? gonna put this in the what i learned on my own thing.\n\n#filter by year\naccessyear &lt;- access_dataset %&gt;% filter(Xyear == input$accessyear)\n#join % pop access with world map\nsostupid_map &lt;- left_join(world_map, accessyear, by = \"region\")\n\nworld_map$region &lt;- countrycode(world_map$region, \"iso3c\", \"iso2c\") #RESET ISO CODES (applies to priceyear as well)\n\n#filter by year\nspeedyear &lt;- speed_dataset %&gt;% filter(Dyear == input$speedyear)\n#join internet download speed (Mbps) with world map\nsohungry_map &lt;- left_join(world_map, speedyear, by = \"region\")\n\n#filter by year\npriceyear &lt;- price_dataset %&gt;% filter(Dyear == input$priceyear)\n#join internet price with world map\nsotired_map &lt;- left_join(world_map, priceyear, by = \"region\")\n\nsohungry_map$values &lt;- as.numeric(sohungry_map$values)\nsotired_map$values &lt;- as.numeric(sotired_map$values)\n\n#group = group connects the points in the correct order\nmapplotting &lt;- function(mapdataset, filldata, colourscheme) {\n  ggplot(mapdataset, aes(long, lat, group = group)) +\n    geom_polygon(aes(fill = filldata), color = \"white\", size = 0.03) +\n    scale_fill_viridis_c(option = colourscheme) +\n    theme(plot.margin = margin(0, 0, 0, 0, \"cm\"))\n}\n\nui &lt;- fluidPage(\n\n    # Application title\n    titlePanel(\"Internet Access, Speed, and Price by Year\"),\n\n    # Sidebar with a slider input for the year\n    sidebarLayout(\n        sidebarPanel(\n            sliderInput(\"accessyear\", \"Access to Internet Year\", min = 1990, max = 2022, value = 2020),\n            sliderInput(\"speedyear\", \"Internet Speed Year\", min = 2017, max = 2023, value = 2020),\n            sliderInput(\"priceyear\", \"Internet Price Year\", min = 2019, max = 2023, value = 2020)\n        ),\n\n        # Show a map with the corresponding data\n        mainPanel(\n            mapplotting(sostupid_map, sostupid_map$values, \"B\"),\n            mapplotting(sohungry_map, sohungry_map$values, \"C\")\n        )\n    )\n)\n\n\nlibrary(tidyverse)\nlibrary(maps)\nlibrary(sf)\nlibrary(dplyr)\nlibrary(countrycode)\nlibrary(shiny)\nlibrary(ggpubr)\n\n# Import the data with coordinates\nworld_map &lt;- map_data(\"world\")\nworld_map$region &lt;- countrycode(world_map$region, \"country.name\", \"iso3c\")\naccesstonet &lt;- read.csv(\"accesstointernet.csv\")\nnetspeed &lt;- read.csv(\"worldwideInternetSpeed.csv\") #ISO2 code used in dataset!\nnetprice &lt;- read.csv(\"worldwideMobileDataPricing2019to2023.csv\") #ISO2 code used in dataset!\n\n# Data cleaning functions\nclean_data &lt;- function(dataset, year_col, value_cols) {\n  dataset %&gt;%\n    pivot_longer(\n      cols = value_cols,\n      names_to = year_col,\n      values_to = \"values\"\n    ) %&gt;%\n    rename(region = Country.Code)\n}\n\n# Clean access data\naccess_dataset &lt;- clean_data(accesstonet, \"Xyear\", \"X1990:X2022\")\n\n# Clean speed data\nspeed_dataset &lt;- clean_data(netspeed, \"Dyear\", \"D2017:D2023\")\n\n# Clean price data\nprice_dataset &lt;- clean_data(netprice, \"Dyear\", \"D2019:D2023\")\nprice_dataset$values &lt;- as.numeric(gsub('[$,]', '', price_dataset$values))\n\n# Shiny app\nui &lt;- fluidPage(\n  titlePanel(\"Worldwide Internet Data\"),\n  sidebarLayout(\n    sidebarPanel(\n      selectInput(\"yearInput\", \"Select Year\", choices = unique(access_dataset$Xyear))\n    ),\n    mainPanel(\n      plotOutput(\"mapPlot\")\n    )\n  )\n)\n\nserver &lt;- function(input, output) {\n  observe({\n    accessyear &lt;- access_dataset %&gt;% filter(Xyear == input$yearInput)\n    sostupid_map &lt;- left_join(world_map, accessyear, by = \"region\")\n    \n    speedyear &lt;- speed_dataset %&gt;% filter(Dyear == input$yearInput)\n    sohungry_map &lt;- left_join(world_map, speedyear, by = \"region\")\n    \n    priceyear &lt;- price_dataset %&gt;% filter(Dyear == input$yearInput)\n    sotired_map &lt;- left_join(world_map, priceyear, by = \"region\")\n    \n    sostupid_map$values &lt;- as.numeric(sostupid_map$values)\n    sohungry_map$values &lt;- as.numeric(sohungry_map$values)\n    sotired_map$values &lt;- as.numeric(sotired_map$values)\n    \n    output$mapPlot &lt;- renderPlot({\n      par(mfrow = c(1, 3), mar = c(2, 2, 2, 2))\n      mapplotting(sostupid_map, sostupid_map$values, \"B\")\n      mapplotting(sohungry_map, sohungry_map$values, \"C\")\n      mapplotting(sotired_map, sotired_map$values, \"C\")\n    })\n  })\n}\n\nshinyApp(ui, server)\n\n(1) Hi! I’m Dawn, a year one communications and new media student. I like to bake but no one eats what I make.\n\n(2) github folder: https://github.com/dawn-cheung/NM2207-Folder-Upload"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Write Up",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2\n\n\nThis is placeholder text for the write up. This is placeholder text for the write up. This is placeholder text for the write up. This is placeholder text for the write up. This is placeholder text for the write up. This is placeholder text for the write up. This is placeholder text for the write up.\nThis is placeholder text for the write up. This is placeholder text for the write up. This is placeholder text for the write up. This is placeholder text for the write up. This is placeholder text for the write up. This is placeholder text for the write up. This is placeholder text for the write up."
  }
]