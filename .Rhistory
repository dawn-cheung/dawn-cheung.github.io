setwd("~/GitHub/NM2207-Folder-Upload/Week-7-8")
setwd("~/GitHub/dawn-cheung.github.io")
setwd("~/GitHub/dawn-cheung.github.io")
install.packages("tidyverse")
#remove all vent commenst when setting echo to true
library(tidyverse)
library(ggplot2)
library(maps)
library(sf)
library(dplyr)
library(countrycode)
# Import the data with coordinates
world_map <- map_data("world")
world_map$region <- countrycode(world_map$region, "country.name", "iso3c")
accesstonet <- read.csv("accesstointernet.csv")
netspeed <- read.csv("worldwideInternetSpeed.csv") #ISO2 code used in dataset!
netprice <- read.csv("worldwideMobileDataPricing2019to2023.csv")
#TO MAKE A FUNCTION FOR THE SWEET BROWNIE POINTS
dataprocessor <- function(namesto, valuesto){
pivot_longer(
cols = everything(),
names_to = namesto,
values_to = valuesto) %>%
rename(region = Country.Code)
}
#oh my jesus im reterded
#data cleaning for access to net
#imstupid <- accesstonet %>%
#   pivot_longer(
#    cols = X1990:X2022,
#    names_to = "Xyear",
#    values_to = "percentaccess") %>%
#  rename(region = Country.Code)
imstupid <- accesstonet %>% select(X1990:X2022) %>% dataprocessor(namesto = "Xyear", valuesto = "percentaccess")
imtired$region
imhungry
#remove all vent commenst when setting echo to true
#bc HOLY FUCK im so FUCKING TIRED AND PISSED FUCK THIS
library(tidyverse)
library(ggplot2)
library(maps)
library(sf)
library(dplyr)
library(countrycode)
# Import the data with coordinates
world_map <- map_data("world")
world_map$region <- countrycode(world_map$region, "country.name", "iso3c")
accesstonet <- read.csv("accesstointernet.csv")
netspeed <- read.csv("worldwideInternetSpeed.csv") #ISO2 code used in dataset!
netprice <- read.csv("worldwideMobileDataPricing2019to2023.csv") #ISO2 code used in dataset!
#data cleaning for access to net
imstupid <- accesstonet %>%
pivot_longer(
cols = X1990:X2022,
names_to = "Xyear",
values_to = "percentaccess") %>%
rename(region = Country.Code)
#data cleaning for speed of net
imhungry <- netspeed %>%
pivot_longer(
cols = D2017:D2023,
names_to = "Dyear",
values_to = "meandownloadspeed") %>%
rename(region = Country.Code)
#data cleaning for price of net
imtired <- netprice %>% #im ok i swear its just 2.30am now 3.17
pivot_longer(
cols = D2019:D2023,
names_to = "Dyear",
values_to = "meanprice") %>%
rename(region = Country.Code)
head(imtired)
#filter by year
accessyear <- imstupid %>% filter(Xyear == "X2020")
#join % pop access with world map
sostupid_map <- left_join(world_map, accessyear, by = "region")
#filter by year
speedyear <- imhungry %>% filter(Dyear == "D2020")
#filter by year AND download speed: speedyear <- imhungry %>% filter(Dyear == "D2020", meandownloadspeed<70)
#RESET ISO CODES (applies to priceyear as well)
world_map$region <- countrycode(world_map$region, "iso3c", "iso2c")
#join internet download speed (Mbps) with world map
sohungry_map <- left_join(world_map, speedyear, by = "region")
sohungry_map$meandownloadspeed <- as.numeric(sohungry_map$meandownloadspeed)
#filter by year
priceyear <- imtired %>% filter(Dyear == "D2020")
#join internet price with world map
sotired_map <- left_join(world_map, priceyear, by = "region")
#group = group connects the points in the correct order
ggplot(sostupid_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = percentaccess), color = "white", size = 0.03)+
scale_fill_viridis_c(option = "B")
ggplot(sohungry_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = meandownloadspeed), color = "white", size = 0.03)+
scale_fill_viridis_c(option = "B")
sotired_map$meanprice <- as.numeric(sotired_map$meanprice)
ggplot(sotired_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = meanprice), color = "white", size = 0.03)+
scale_fill_viridis_c(option = "B")
econineq <- read.csv("EconomicInequality.csv")
GINIvaluesyear <- econineq %>%
filter(year == 2020) %>%
#select(gini, c3) %>%
rename(region = c3)
accessscatter <- left_join(GINIvaluesyear, accessyear, by = "region")
accessscatter %>%
drop_na(percentaccess) %>%
ggplot(data = accessscatter, mapping = aes(x = gini, y = percentaccess, colour = gdp)) +
geom_point()
speedscatter <- left_join(GINIvaluesyear, speedyear, by = "region")
speedscatter %>%
drop_na(meandownloadspeed) %>%
ggplot(data = accessscatter, mapping = aes(x = gini, y = meandownloadspeed, colour = gdp)) +
geom_point()
install.packages("shiny")
